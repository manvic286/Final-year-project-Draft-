<!-- views/create-course.ejs -->
<!DOCTYPE html>
<html lang="en">
  <%- include('partials/head') %>
<body class="bg-light">
  <%- include('partials/nav') %>

  <main class="container py-5">
    <div class="row justify-content-center">
      <div class="col-lg-8">
        <div class="card shadow-sm">
          <div class="card-body p-4">
            <h2 class="card-title text-center mb-4">Create New Course</h2>
            
            <form id="create-course-form" action="/api/courses" method="post">
              <div class="mb-3">
                <label for="title" class="form-label">Course Title</label>
                <input type="text" class="form-control" id="title" name="title" required maxlength="100">
              </div>
              
              <div class="mb-3">
                <label for="description" class="form-label">Course Description</label>
                <textarea class="form-control" id="description" name="description" rows="6" required></textarea>
              </div>
              
              <div class="mb-3">
                <label for="coverImage" class="form-label">Cover Image URL (optional)</label>
                <input type="text" class="form-control" id="coverImage" name="coverImage" 
                       placeholder="https://example.com/image.jpg">
                <div class="form-text">Leave empty for default image</div>
              </div>
              
              <div class="mb-4">
                <div class="form-check">
                  <input type="checkbox" class="form-check-input" id="isPublished" name="isPublished">
                  <label class="form-check-label" for="isPublished">Publish course immediately</label>
                </div>
              </div>
              
              <div class="d-flex gap-2 justify-content-end">
                <button type="button" class="btn btn-secondary" id="cancel-btn">
                  <i class="fas fa-times me-2"></i>Cancel
                </button>
                <button type="submit" class="btn btn-primary">
                  <i class="fas fa-plus-circle me-2"></i>Create Course
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </main>

  <%- include('partials/footer') %>

  <script>
    const createCourseForm = document.getElementById('create-course-form');
    const cancelBtn = document.getElementById('cancel-btn');
    
    // Cancel button event
    cancelBtn.addEventListener('click', () => {
      window.location.href = '/courses';
    });
    
    // Form submission
    createCourseForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const title = document.getElementById('title').value;
      const description = document.getElementById('description').value;
      const coverImage = document.getElementById('coverImage').value;
      const isPublished = document.getElementById('isPublished').checked;
      
      const courseData = {
        title,
        description,
        isPublished
      };
      
      if (coverImage) {
        courseData.coverImage = coverImage;
      }
      
      try {
        const response = await fetch('/api/courses', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(courseData)
        });
        
        if (!response.ok) {
          const error = await response.json();
          throw new Error(error.message || 'Failed to create course');
        }
        
        const data = await response.json();
        
        if (data.success) {
          alert('Course created successfully!');
          window.location.href = `/courses/${data.data._id}`;
        } else {
          alert(data.message || 'Failed to create course');
        }
      } catch (error) {
        console.error('Error:', error);
        alert(error.message || 'An error occurred while creating the course');
      }
    });
    
    // Logout handler
    document.getElementById('logout-link').addEventListener('click', async (e) => {
      e.preventDefault();
      
      try {
        const response = await fetch('/api/auth/logout', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          }
        });

        const data = await response.json();
        
        if (data.success) {
          window.location.href = '/';
        }
      } catch (error) {
        console.error('Error:', error);
        alert('An error occurred during logout');
      }
    });
  </script>
</body>
</html>